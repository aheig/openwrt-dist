name: Openwrt Build Bot
on:
  push:
    branches: master
  schedule:
  - cron: 0 0 * * *

jobs:
  buildpkg:
    name: Build Openwrt Package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        SDK_URL:
        - https://downloads.openwrt.org/releases/19.07.3/targets/ipq806x/generic/openwrt-sdk-19.07.3-ipq806x-generic_gcc-7.5.0_musl_eabi.Linux-x86_64.tar.xz
        - https://downloads.openwrt.org/releases/19.07.3/targets/ipq40xx/generic/openwrt-sdk-19.07.3-ipq40xx-generic_gcc-7.5.0_musl_eabi.Linux-x86_64.tar.xz
        - https://downloads.openwrt.org/releases/19.07.3/targets/ar71xx/generic/openwrt-sdk-19.07.3-ar71xx-generic_gcc-7.5.0_musl.Linux-x86_64.tar.xz
        - https://downloads.openwrt.org/releases/19.07.3/targets/ramips/mt7621/openwrt-sdk-19.07.3-ramips-mt7621_gcc-7.5.0_musl.Linux-x86_64.tar.xz
        - https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-sdk-x86-64_gcc-8.4.0_musl.Linux-x86_64.tar.xz
    steps:
    - uses: actions/checkout@master
    - name: Env for Openwrt SDK
      run: sudo apt install -y libev-dev libc-ares-dev libudns-dev libncurses-dev
    - name: Download Openwrt SDK
      env:
        SDK_URL: ${{ matrix.SDK_URL }}
      run: |
        SDK_HOME=$(head -c -8 <<< $(basename $SDK_URL))
        wget $SDK_URL
        tar xf $(basename $SDK_URL) -C ~/
        mv ~/$SDK_HOME ~/sdk
        cp key-build ~/sdk/
    - name: Download Packages
      run: |
        cd ~/sdk
        # Shadowsocks
        git clone -b master https://github.com/shadowsocks/luci-app-shadowsocks package/luci-app-shadowsocks
        git clone -b master https://github.com/shadowsocks/openwrt-shadowsocks package/shadowsocks-libev
        git clone -b master https://github.com/aa65535/openwrt-simple-obfs package/simple-obfs
        # Misc
        git clone -b master https://github.com/aa65535/openwrt-chinadns package/chinadns
        git clone -b master https://github.com/aa65535/openwrt-dns-forwarder package/dns-forwarder
        git clone -b master https://github.com/aa65535/openwrt-dist-luci package/openwrt-dist-luci
        # Vlmcsd
        git clone -b master https://github.com/mchome/openwrt-vlmcsd package/vlmcsd
        git clone -b master https://github.com/mchome/luci-app-vlmcsd package/luci-app-vlmcsd
        # V2Ray
        git clone -b master https://github.com/kuoruan/openwrt-v2ray package/v2ray-core
        git clone -b luci2 https://github.com/kuoruan/luci-app-v2ray package/luci-app-v2ray
        # V2Ray-Plugin
        git clone -b master https://github.com/simonsmh/openwrt-v2ray-plugin package/v2ray-plugin
        # Clash
        git clone -b master https://github.com/vernesong/OpenClash package/openclash
        # Smartdns
        git clone -b master https://github.com/pymumu/openwrt-smartdns package/smartdns
        git clone -b master https://github.com/pymumu/luci-app-smartdns package/luci-app-smartdns
        sed -i 's|../../luci.mk|$(TOPDIR)/feeds/luci/luci.mk|g; 7iPKG_NAME:=luci-app-smartdns' package/luci-app-smartdns/Makefile
        # Dependency
        #git clone -b master https://github.com/shadowsocks/openwrt-feeds package/custom
        pushd package/openwrt-dist-luci/tools/po2lmo ; make && sudo make install ; popd
        ./scripts/feeds update -a
        ./scripts/feeds install golang c-ares libev libopenssl libsodium mbedtls pcre
    - name: Compile
      run: |
        cd ~/sdk
        make defconfig
        # Edit config
        # sed -i 's/CONFIG_PACKAGE_libpcrecpp=m/CONFIG_PACKAGE_libpcrecpp=n/g' .config
        make V=s
    - name: Upload
      env:
        SDK_URL: ${{ matrix.SDK_URL }}
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        TAG=$(sed -n 's/.*targets\/\(\w*\)\/\(\w*\)\/.*/packages\/\1\/\2/p' <<< $SDK_URL)
        # Upload base only
        cd ~/sdk/bin/packages/*/base
        git init
        git config user.name "bot"
        git config user.email "bot@github.com"
        git add .
        git commit -m "$TAG$(TZ='Asia/Shanghai' date +@%Y%m%d)"
        git push --force --quiet "https://$GITHUB_TOKEN@github.com/simonsmh/openwrt-dist.git" HEAD:$TAG

  buildimg:
    name: Build Openwrt Image
    needs: buildpkg
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        PROFILE: [netgear_r7800, qihoo-c301, asus_rt-ac58u, r6220, generic.x86_64, asus_rt-ac58u.master, r6220.master, r6220.relay, qihoo-c301.relay]
        include:
        - PROFILE: netgear_r7800
          IB_URL: https://downloads.openwrt.org/releases/19.07.3/targets/ipq806x/generic/openwrt-imagebuilder-19.07.3-ipq806x-generic.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates libustream-openssl block-mount usbutils coreutils coreutils-base64 curl iperf3 ip-full iptables-mod-tproxy kmod-usb-storage-extras kmod-usb-storage-uas kmod-fs-exfat kmod-fs-vfat kmod-fs-ntfs kmod-fs-ext4 kmod-ipt-nat6 kmod-tun dosfstools ntfs-3g e2fsprogs fdisk libmbedtls luci luci-app-samba luci-app-shadowsocks luci-app-smartdns luci-app-dns-forwarder luci-app-openclash stubby luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn luci-i18n-samba-zh-cn luci-i18n-smartdns-zh-cn mount-utils shadowsocks-libev smartdns uhttpd bind-dig knot-dig iperf3 mtr htop tmux nano lsblk etherwake tcpdump wpad-openssl -wpad-basic dnsmasq-full -dnsmasq
          INCLUDE_FILES: true
        - PROFILE: qihoo-c301
          IB_URL: https://downloads.openwrt.org/releases/19.07.3/targets/ar71xx/generic/openwrt-imagebuilder-19.07.3-ar71xx-generic.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates libustream-wolfssl block-mount usbutils coreutils coreutils-base64 curl iperf3 ip-full iptables-mod-tproxy kmod-usb-storage-extras kmod-usb-storage-uas kmod-fs-exfat kmod-fs-vfat kmod-fs-ntfs kmod-fs-ext4 kmod-ipt-nat6 kmod-tun dosfstools ntfs-3g e2fsprogs fdisk libmbedtls luci luci-app-samba luci-app-shadowsocks luci-app-smartdns luci-app-dns-forwarder stubby luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn luci-i18n-samba-zh-cn luci-i18n-smartdns-zh-cn mount-utils shadowsocks-libev smartdns uhttpd bind-dig knot-dig iperf3 mtr htop tmux nano lsblk etherwake tcpdump dnsmasq-full -dnsmasq
          INCLUDE_FILES: true
        - PROFILE: asus_rt-ac58u
          IB_URL: https://downloads.openwrt.org/releases/19.07.3/targets/ipq40xx/generic/openwrt-imagebuilder-19.07.3-ipq40xx-generic.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates libustream-openssl block-mount usbutils coreutils coreutils-base64 curl iperf3 ip-full iptables-mod-tproxy kmod-usb-storage-extras kmod-usb-storage-uas kmod-fs-exfat kmod-fs-vfat kmod-fs-ntfs kmod-fs-ext4 kmod-ipt-nat6 kmod-tun dosfstools ntfs-3g e2fsprogs fdisk libmbedtls luci luci-app-samba luci-app-shadowsocks luci-app-smartdns luci-app-dns-forwarder stubby luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn luci-i18n-samba-zh-cn luci-i18n-smartdns-zh-cn mount-utils shadowsocks-libev smartdns uhttpd bind-dig knot-dig iperf3 mtr htop tmux nano lsblk etherwake tcpdump wpad-openssl -wpad-basic dnsmasq-full -dnsmasq
          INCLUDE_FILES: true
        - PROFILE: r6220
          IB_URL: https://downloads.openwrt.org/releases/19.07.3/targets/ramips/mt7621/openwrt-imagebuilder-19.07.3-ramips-mt7621.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates libustream-openssl curl ip-full iptables-mod-tproxy libmbedtls luci luci-app-samba luci-app-shadowsocks luci-app-smartdns stubby luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn luci-i18n-samba-zh-cn luci-i18n-smartdns-zh-cn shadowsocks-libev smartdns bind-dig knot-dig iperf3 mtr htop wpad-openssl -wpad-basic dnsmasq-full -dnsmasq
          INCLUDE_FILES: true
        - PROFILE: generic.x86_64
          IB_URL: https://downloads.openwrt.org/snapshots/targets/x86/64/openwrt-imagebuilder-x86-64.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates libustream-openssl block-mount usbutils coreutils coreutils-base64 curl iperf3 ip-full iptables-mod-tproxy ebtables kmod-ebtables-ipv6 kmod-usb-storage-extras kmod-usb-storage-uas kmod-fs-exfat kmod-fs-vfat kmod-fs-ntfs kmod-fs-ext4 kmod-ipt-nat6 kmod-tun dosfstools ntfs-3g e2fsprogs fdisk libmbedtls luci luci-compat luci-app-samba4 luci-app-openclash stubby luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn luci-i18n-opkg-zh-cn luci-i18n-samba4-zh-cn mount-utils uhttpd bind-dig knot-dig iperf3 mtr htop tmux nano lsblk etherwake tcpdump dnsmasq-full -dnsmasq kmod-usb-net-rtl8152
          INCLUDE_FILES: true
        - PROFILE: asus_rt-ac58u.master
          IB_URL: https://downloads.openwrt.org/releases/19.07.3/targets/ipq40xx/generic/openwrt-imagebuilder-19.07.3-ipq40xx-generic.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates luci luci-i18n-base-zh-cn wget curl luci-i18n-firewall-zh-cn wpad-openssl -wpad-basic libustream-openssl coreutils-base64 lsblk fdisk tmux nano etherwake openssh-client tcpdump bind-dig iperf3 mtr iptables-mod-tproxy ip shadowsocks-libev luci-app-shadowsocks luci-app-chinadns stubby shadowsocks-libev-server kmod-fs-vfat kmod-fs-ext4 kmod-usb-storage-extras iptables-mod-iprange kmod-ipt-nat6 kmod-ip6tables-extra kmod-ip6-tunnel miniupnpd luci-app-upnp block-mount
          INCLUDE_FILES: false
        - PROFILE: r6220.master
          IB_URL: https://downloads.openwrt.org/releases/19.07.3/targets/ramips/mt7621/openwrt-imagebuilder-19.07.3-ramips-mt7621.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates luci luci-i18n-base-zh-cn wget curl luci-i18n-firewall-zh-cn wpad-openssl -wpad-basic libustream-openssl coreutils-base64 lsblk fdisk tmux nano etherwake openssh-client tcpdump bind-dig iperf3 mtr iptables-mod-tproxy ip shadowsocks-libev luci-app-shadowsocks luci-app-chinadns stubby shadowsocks-libev-server kmod-fs-vfat kmod-fs-ext4 kmod-usb-storage-extras iptables-mod-iprange kmod-ipt-nat6 kmod-ip6tables-extra kmod-ip6-tunnel miniupnpd luci-app-upnp block-mount ndppd
          INCLUDE_FILES: false
        - PROFILE: r6220.relay
          IB_URL: https://downloads.openwrt.org/releases/19.07.3/targets/ramips/mt7621/openwrt-imagebuilder-19.07.3-ramips-mt7621.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates luci luci-i18n-base-zh-cn wget curl luci-i18n-firewall-zh-cn wpad-openssl -wpad-basic libustream-openssl coreutils-base64 lsblk fdisk tmux nano etherwake openssh-client bind-dig iperf3 mtr ip kmod-fs-vfat kmod-fs-ext4 kmod-usb-storage-extras block-mount
          INCLUDE_FILES: false
        - PROFILE: qihoo-c301.relay
          IB_URL: https://downloads.openwrt.org/releases/19.07.3/targets/ar71xx/generic/openwrt-imagebuilder-19.07.3-ar71xx-generic.Linux-x86_64.tar.xz
          PACKAGES: ca-bundle ca-certificates luci luci-i18n-base-zh-cn wget curl luci-i18n-firewall-zh-cn wpad-openssl -wpad-basic libustream-openssl coreutils-base64 lsblk fdisk tmux nano etherwake openssh-client bind-dig iperf3 mtr ip kmod-fs-vfat kmod-fs-ext4 kmod-usb-storage-extras block-mount
          INCLUDE_FILES: false
    steps:
    - uses: actions/checkout@master
    - name: Env for Openwrt ImageBuilder
      run: sudo apt install -y libncurses-dev
    - name: Download Openwrt ImageBuilder
      env:
        IB_URL: ${{ matrix.IB_URL }}
      run: |
        wget $IB_URL
        tar xf $(basename $IB_URL)
    - name: Fetch Files
      env:
        IB_URL: ${{ matrix.IB_URL }}
      if: matrix.INCLUDE_FILES
      run: |
        IB_HOME=$(basename $IB_URL|head -c -8)
        TAG=$(sed -n 's/.*targets\/\(\w*\)\/\(\w*\)\/.*/packages\/\1\/\2/p' <<< $IB_URL)
        cd $IB_HOME
        mkdir -p files/root/
        mkdir -p files/etc/opkg/
        mkdir -p files/etc/smartdns/
        cp ../simonsmh-dist.pub files/root/
        wget https://github.com/SYHGroup/easy_shell/raw/master/ddns/CloudFlare-ddns.sh -O files/root/CloudFlare-ddns.sh
        wget https://github.com/SYHGroup/easy_shell/raw/master/sss/update_list -O files/root/update_list
        cat files/root/update_list | sed "s/\/etc/files\/etc/g" | bash
        wget https://gist.githubusercontent.com/simonsmh/2a609e0c801acabc2e1d7733432bce4c/raw/blacklist-ip.conf -O files/etc/smartdns/blacklist-ip.conf
        echo "src/gz simonsmh https://github.com/simonsmh/openwrt-dist/raw/$TAG" > files/etc/opkg/customfeeds.conf
    - name: Build Image
      shell: bash
      env:
        PROFILE: ${{ matrix.PROFILE }}
        IB_URL: ${{ matrix.IB_URL }}
        PACKAGES: ${{ matrix.PACKAGES }}
      run: |
        IB_HOME=$(basename $IB_URL|head -c -8)
        TAG=$(sed -n 's/.*targets\/\(\w*\)\/\(\w*\)\/.*/packages\/\1\/\2/p' <<< $IB_URL)
        cd $IB_HOME
        echo "src/gz simonsmh https://github.com/simonsmh/openwrt-dist/raw/$TAG" >> repositories.conf
        makeopts=("PROFILE=${PROFILE%.*}" "PACKAGES=$PACKAGES")
        [[ -d files ]] && makeopts+=("FILES=files/")
        make info
        TERM=xterm-256color make image "${makeopts[@]}"
    - name: Upload
      id: upload
      env:
        PROFILE: ${{ matrix.PROFILE }}
        IB_URL: ${{ matrix.IB_URL }}
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      run: |
        IB_HOME=$(basename $IB_URL|head -c -8)
        TAG=$(sed -n 's/.*targets\/\(\w*\)\/\(\w*\)\/.*/packages\/\1\/\2/p' <<< $IB_URL)
        # Prepare Release
        ARTIFACTPATH="$(pwd)/image"
        mkdir -p $ARTIFACTPATH
        # Upload image
        cd $IB_HOME/bin/targets/$(cut -b 10- <<< $TAG)
        cp * $ARTIFACTPATH
        git init
        git config user.name "bot"
        git config user.email "bot@github.com"
        git add .
        git commit -m "$PROFILE$(TZ='Asia/Shanghai' date +@%Y%m%d)"
        git push --force --quiet "https://$GITHUB_TOKEN@github.com/simonsmh/openwrt-dist.git" HEAD:image/$PROFILE
    - uses: actions/upload-artifact@v2
      with:
        name: image_${{ matrix.PROFILE }}
        path: ./image
